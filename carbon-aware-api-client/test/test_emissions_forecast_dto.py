# coding: utf-8

"""
    CarbonAware.WebAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.emissions_forecast_dto import EmissionsForecastDTO

class TestEmissionsForecastDTO(unittest.TestCase):
    """EmissionsForecastDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmissionsForecastDTO:
        """Test EmissionsForecastDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmissionsForecastDTO`
        """
        model = EmissionsForecastDTO()
        if include_optional:
            return EmissionsForecastDTO(
                generated_at = '2022-06-01T00:00Z',
                requested_at = '2022-06-01T00:03:30Z',
                location = 'eastus',
                data_start_at = '2022-06-01T12:00Z',
                data_end_at = '2022-06-01T18:00Z',
                window_size = 30,
                optimal_data_points = {"location":"eastus","timestamp":"2022-06-01T14:45:00Z","duration":30,"value":359.23},
                forecast_data = [{"location":"eastus","timestamp":"2022-06-01T14:40:00Z","duration":30,"value":380.99},{"location":"eastus","timestamp":"2022-06-01T14:45:00Z","duration":30,"value":359.23},{"location":"eastus","timestamp":"2022-06-01T14:50:00Z","duration":30,"value":375.12}]
            )
        else:
            return EmissionsForecastDTO(
        )
        """

    def testEmissionsForecastDTO(self):
        """Test EmissionsForecastDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
